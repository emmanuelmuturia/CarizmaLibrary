/*
 * Sonux  Copyright (C) 2024  Emmanuel Muturiaâ„¢
 * This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
 * This is free software, and you are welcome to redistribute it
 * under certain conditions; type `show c' for details.
 *
 * The hypothetical commands `show w' and `show c' should show the appropriate
 * parts of the General Public License.  Of course, your program's commands
 * might be different; for a GUI interface, you would use an "about box".
 *
 * You should also get your employer (if you work as a programmer) or school,
 * if any, to sign a "copyright disclaimer" for the program, if necessary.
 * For more information on this, and how to apply and follow the GNU GPL, see
 * <https://www.gnu.org/licenses/>.
 *
 * The GNU General Public License does not permit incorporating your program
 * into proprietary programs.  If your program is a subroutine library, you
 * may consider it more useful to permit linking proprietary applications with
 * the library.  If this is what you want to do, use the GNU Lesser General
 * Public License instead of this License.  But first, please read
 * <https://www.gnu.org/licenses/why-not-lgpl.html>.
*/
package emmanuelmuturia.sonux.demo.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(color = 0xFF5C4A64)
val onPrimaryLight = Color(color = 0xFFFFFFFF)
val primaryContainerLight = Color(color = 0xFF816E8A)
val onPrimaryContainerLight = Color(color = 0xFFFFFFFF)
val secondaryLight = Color(color = 0xFF655B67)
val onSecondaryLight = Color(color = 0xFFFFFFFF)
val secondaryContainerLight = Color(color = 0xFFF0E2F1)
val onSecondaryContainerLight = Color(color = 0xFF504753)
val tertiaryLight = Color(color = 0xFF6B464E)
val onTertiaryLight = Color(color = 0xFFFFFFFF)
val tertiaryContainerLight = Color(color = 0xFF936A72)
val onTertiaryContainerLight = Color(color = 0xFFFFFFFF)
val errorLight = Color(color = 0xFFBA1A1A)
val onErrorLight = Color(color = 0xFFFFFFFF)
val errorContainerLight = Color(color = 0xFFFFDAD6)
val onErrorContainerLight = Color(color = 0xFF410002)
val backgroundLight = Color(color = 0xFFFEF8FA)
val onBackgroundLight = Color(color = 0xFF1D1B1D)
val surfaceLight = Color(color = 0xFFFEF8FA)
val onSurfaceLight = Color(color = 0xFF1D1B1D)
val surfaceVariantLight = Color(color = 0xFFE9E0E8)
val onSurfaceVariantLight = Color(color = 0xFF4B454C)
val outlineLight = Color(color = 0xFF7C757C)
val outlineVariantLight = Color(color = 0xFFCDC4CC)
val scrimLight = Color(color = 0xFF000000)
val inverseSurfaceLight = Color(color = 0xFF323032)
val inverseOnSurfaceLight = Color(color = 0xFFF5EFF2)
val inversePrimaryLight = Color(color = 0xFFD6BFDE)
val surfaceDimLight = Color(color = 0xFFDED8DB)
val surfaceBrightLight = Color(color = 0xFFFEF8FA)
val surfaceContainerLowestLight = Color(color = 0xFFFFFFFF)
val surfaceContainerLowLight = Color(color = 0xFFF8F2F4)
val surfaceContainerLight = Color(color = 0xFFF2ECEF)
val surfaceContainerHighLight = Color(color = 0xFFEDE7E9)
val surfaceContainerHighestLight = Color(color = 0xFFE7E1E3)

val primaryLightMediumContrast = Color(color = 0xFF4E3C56)
val onPrimaryLightMediumContrast = Color(color = 0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(color = 0xFF816E8A)
val onPrimaryContainerLightMediumContrast = Color(color = 0xFFFFFFFF)
val secondaryLightMediumContrast = Color(color = 0xFF48404B)
val onSecondaryLightMediumContrast = Color(color = 0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(color = 0xFF7B717E)
val onSecondaryContainerLightMediumContrast = Color(color = 0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(color = 0xFF5C3940)
val onTertiaryLightMediumContrast = Color(color = 0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(color = 0xFF936A72)
val onTertiaryContainerLightMediumContrast = Color(color = 0xFFFFFFFF)
val errorLightMediumContrast = Color(color = 0xFF8C0009)
val onErrorLightMediumContrast = Color(color = 0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(color = 0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(color = 0xFFFFFFFF)
val backgroundLightMediumContrast = Color(color = 0xFFFEF8FA)
val onBackgroundLightMediumContrast = Color(color = 0xFF1D1B1D)
val surfaceLightMediumContrast = Color(color = 0xFFFEF8FA)
val onSurfaceLightMediumContrast = Color(color = 0xFF1D1B1D)
val surfaceVariantLightMediumContrast = Color(color = 0xFFE9E0E8)
val onSurfaceVariantLightMediumContrast = Color(color = 0xFF474148)
val outlineLightMediumContrast = Color(color = 0xFF635D64)
val outlineVariantLightMediumContrast = Color(color = 0xFF807880)
val scrimLightMediumContrast = Color(color = 0xFF000000)
val inverseSurfaceLightMediumContrast = Color(color = 0xFF323032)
val inverseOnSurfaceLightMediumContrast = Color(color = 0xFFF5EFF2)
val inversePrimaryLightMediumContrast = Color(color = 0xFFD6BFDE)
val surfaceDimLightMediumContrast = Color(color = 0xFFDED8DB)
val surfaceBrightLightMediumContrast = Color(color = 0xFFFEF8FA)
val surfaceContainerLowestLightMediumContrast = Color(color = 0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(color = 0xFFF8F2F4)
val surfaceContainerLightMediumContrast = Color(color = 0xFFF2ECEF)
val surfaceContainerHighLightMediumContrast = Color(color = 0xFFEDE7E9)
val surfaceContainerHighestLightMediumContrast = Color(color = 0xFFE7E1E3)

val primaryLightHighContrast = Color(color = 0xFF2C1C34)
val onPrimaryLightHighContrast = Color(color = 0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(color = 0xFF4E3C56)
val onPrimaryContainerLightHighContrast = Color(color = 0xFFFFFFFF)
val secondaryLightHighContrast = Color(color = 0xFF27202A)
val onSecondaryLightHighContrast = Color(color = 0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(color = 0xFF48404B)
val onSecondaryContainerLightHighContrast = Color(color = 0xFFFFFFFF)
val tertiaryLightHighContrast = Color(color = 0xFF371920)
val onTertiaryLightHighContrast = Color(color = 0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(color = 0xFF5C3940)
val onTertiaryContainerLightHighContrast = Color(color = 0xFFFFFFFF)
val errorLightHighContrast = Color(color = 0xFF4E0002)
val onErrorLightHighContrast = Color(color = 0xFFFFFFFF)
val errorContainerLightHighContrast = Color(color = 0xFF8C0009)
val onErrorContainerLightHighContrast = Color(color = 0xFFFFFFFF)
val backgroundLightHighContrast = Color(color = 0xFFFEF8FA)
val onBackgroundLightHighContrast = Color(color = 0xFF1D1B1D)
val surfaceLightHighContrast = Color(color = 0xFFFEF8FA)
val onSurfaceLightHighContrast = Color(color = 0xFF000000)
val surfaceVariantLightHighContrast = Color(color = 0xFFE9E0E8)
val onSurfaceVariantLightHighContrast = Color(color = 0xFF272228)
val outlineLightHighContrast = Color(color = 0xFF474148)
val outlineVariantLightHighContrast = Color(color = 0xFF474148)
val scrimLightHighContrast = Color(color = 0xFF000000)
val inverseSurfaceLightHighContrast = Color(color = 0xFF323032)
val inverseOnSurfaceLightHighContrast = Color(color = 0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(color = 0xFFFAE5FF)
val surfaceDimLightHighContrast = Color(color = 0xFFDED8DB)
val surfaceBrightLightHighContrast = Color(color = 0xFFFEF8FA)
val surfaceContainerLowestLightHighContrast = Color(color = 0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(color = 0xFFF8F2F4)
val surfaceContainerLightHighContrast = Color(color = 0xFFF2ECEF)
val surfaceContainerHighLightHighContrast = Color(color = 0xFFEDE7E9)
val surfaceContainerHighestLightHighContrast = Color(color = 0xFFE7E1E3)

val primaryDark = Color(color = 0xFFD6BFDE)
val onPrimaryDark = Color(color = 0xFF3B2A43)
val primaryContainerDark = Color(color = 0xFF816E8A)
val onPrimaryContainerDark = Color(color = 0xFFFFFFFF)
val secondaryDark = Color(color = 0xFFCFC3D0)
val onSecondaryDark = Color(color = 0xFF352E38)
val secondaryContainerDark = Color(color = 0xFF453D48)
val onSecondaryContainerDark = Color(color = 0xFFDDD0DF)
val tertiaryDark = Color(color = 0xFFEBBAC2)
val onTertiaryDark = Color(color = 0xFF47272E)
val tertiaryContainerDark = Color(color = 0xFF936A72)
val onTertiaryContainerDark = Color(color = 0xFFFFFFFF)
val errorDark = Color(color = 0xFFFFB4AB)
val onErrorDark = Color(color = 0xFF690005)
val errorContainerDark = Color(color = 0xFF93000A)
val onErrorContainerDark = Color(color = 0xFFFFDAD6)
val backgroundDark = Color(color = 0xFF151315)
val onBackgroundDark = Color(color = 0xFFE7E1E3)
val surfaceDark = Color(color = 0xFF151315)
val onSurfaceDark = Color(color = 0xFFE7E1E3)
val surfaceVariantDark = Color(color = 0xFF4B454C)
val onSurfaceVariantDark = Color(color = 0xFFCDC4CC)
val outlineDark = Color(color = 0xFF968E96)
val outlineVariantDark = Color(color = 0xFF4B454C)
val scrimDark = Color(color = 0xFF000000)
val inverseSurfaceDark = Color(color = 0xFFE7E1E3)
val inverseOnSurfaceDark = Color(color = 0xFF323032)
val inversePrimaryDark = Color(color = 0xFF6A5873)
val surfaceDimDark = Color(color = 0xFF151315)
val surfaceBrightDark = Color(color = 0xFF3B383A)
val surfaceContainerLowestDark = Color(color = 0xFF0F0E0F)
val surfaceContainerLowDark = Color(color = 0xFF1D1B1D)
val surfaceContainerDark = Color(color = 0xFF211F21)
val surfaceContainerHighDark = Color(color = 0xFF2C292B)
val surfaceContainerHighestDark = Color(color = 0xFF363436)

val primaryDarkMediumContrast = Color(color = 0xFFDAC3E2)
val onPrimaryDarkMediumContrast = Color(color = 0xFF1F1027)
val primaryContainerDarkMediumContrast = Color(color = 0xFF9F89A7)
val onPrimaryContainerDarkMediumContrast = Color(color = 0xFF000000)
val secondaryDarkMediumContrast = Color(color = 0xFFD3C7D5)
val onSecondaryDarkMediumContrast = Color(color = 0xFF1B141E)
val secondaryContainerDarkMediumContrast = Color(color = 0xFF988D9A)
val onSecondaryContainerDarkMediumContrast = Color(color = 0xFF000000)
val tertiaryDarkMediumContrast = Color(color = 0xFFF0BEC7)
val onTertiaryDarkMediumContrast = Color(color = 0xFF290D14)
val tertiaryContainerDarkMediumContrast = Color(color = 0xFFB1858D)
val onTertiaryContainerDarkMediumContrast = Color(color = 0xFF000000)
val errorDarkMediumContrast = Color(color = 0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(color = 0xFF370001)
val errorContainerDarkMediumContrast = Color(color = 0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(color = 0xFF000000)
val backgroundDarkMediumContrast = Color(color = 0xFF151315)
val onBackgroundDarkMediumContrast = Color(color = 0xFFE7E1E3)
val surfaceDarkMediumContrast = Color(color = 0xFF151315)
val onSurfaceDarkMediumContrast = Color(color = 0xFFFFF9FB)
val surfaceVariantDarkMediumContrast = Color(color = 0xFF4B454C)
val onSurfaceVariantDarkMediumContrast = Color(color = 0xFFD1C8D0)
val outlineDarkMediumContrast = Color(color = 0xFFA9A0A8)
val outlineVariantDarkMediumContrast = Color(color = 0xFF888188)
val scrimDarkMediumContrast = Color(color = 0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(color = 0xFFE7E1E3)
val inverseOnSurfaceDarkMediumContrast = Color(color = 0xFF2C292B)
val inversePrimaryDarkMediumContrast = Color(color = 0xFF53425B)
val surfaceDimDarkMediumContrast = Color(color = 0xFF151315)
val surfaceBrightDarkMediumContrast = Color(color = 0xFF3B383A)
val surfaceContainerLowestDarkMediumContrast = Color(color = 0xFF0F0E0F)
val surfaceContainerLowDarkMediumContrast = Color(color = 0xFF1D1B1D)
val surfaceContainerDarkMediumContrast = Color(color = 0xFF211F21)
val surfaceContainerHighDarkMediumContrast = Color(color = 0xFF2C292B)
val surfaceContainerHighestDarkMediumContrast = Color(color = 0xFF363436)

val primaryDarkHighContrast = Color(color = 0xFFFFF9FB)
val onPrimaryDarkHighContrast = Color(color = 0xFF000000)
val primaryContainerDarkHighContrast = Color(color = 0xFFDAC3E2)
val onPrimaryContainerDarkHighContrast = Color(color = 0xFF000000)
val secondaryDarkHighContrast = Color(color = 0xFFFFF9FB)
val onSecondaryDarkHighContrast = Color(color = 0xFF000000)
val secondaryContainerDarkHighContrast = Color(color = 0xFFD3C7D5)
val onSecondaryContainerDarkHighContrast = Color(color = 0xFF000000)
val tertiaryDarkHighContrast = Color(color = 0xFFFFF9F9)
val onTertiaryDarkHighContrast = Color(color = 0xFF000000)
val tertiaryContainerDarkHighContrast = Color(color = 0xFFF0BEC7)
val onTertiaryContainerDarkHighContrast = Color(color = 0xFF000000)
val errorDarkHighContrast = Color(color = 0xFFFFF9F9)
val onErrorDarkHighContrast = Color(color = 0xFF000000)
val errorContainerDarkHighContrast = Color(color = 0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(color = 0xFF000000)
val backgroundDarkHighContrast = Color(color = 0xFF151315)
val onBackgroundDarkHighContrast = Color(color = 0xFFE7E1E3)
val surfaceDarkHighContrast = Color(color = 0xFF151315)
val onSurfaceDarkHighContrast = Color(color = 0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(color = 0xFF4B454C)
val onSurfaceVariantDarkHighContrast = Color(color = 0xFFFFF9FB)
val outlineDarkHighContrast = Color(color = 0xFFD1C8D0)
val outlineVariantDarkHighContrast = Color(color = 0xFFD1C8D0)
val scrimDarkHighContrast = Color(color = 0xFF000000)
val inverseSurfaceDarkHighContrast = Color(color = 0xFFE7E1E3)
val inverseOnSurfaceDarkHighContrast = Color(color = 0xFF000000)
val inversePrimaryDarkHighContrast = Color(color = 0xFF34243C)
val surfaceDimDarkHighContrast = Color(color = 0xFF151315)
val surfaceBrightDarkHighContrast = Color(color = 0xFF3B383A)
val surfaceContainerLowestDarkHighContrast = Color(color = 0xFF0F0E0F)
val surfaceContainerLowDarkHighContrast = Color(color = 0xFF1D1B1D)
val surfaceContainerDarkHighContrast = Color(color = 0xFF211F21)
val surfaceContainerHighDarkHighContrast = Color(color = 0xFF2C292B)
val surfaceContainerHighestDarkHighContrast = Color(color = 0xFF363436)